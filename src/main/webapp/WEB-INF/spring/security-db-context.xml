<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/login/loginForm" access="permitAll" />
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
		<!-- <intercept-url pattern="/security/all" access="permitAll" />
		<intercept-url pattern="/security/member" access="hasRole('ROLE_MEMBER')" />
		<intercept-url pattern="/security/admin" access="hasRole('ROLE_ADMIN')" /> -->
		
		<!-- 로그인 페이지 커스텀 -->
		<form-login login-page="/login/loginForm"
                    default-target-url="/"
                    authentication-failure-url="/login/loginForm?error"
                    username-parameter="id"
                    password-parameter="password" />
                    
		<!-- 로그아웃 -->
		<logout logout-url="/logout" logout-success-url="/" /> 
		
		<!-- 403에러 처리 -->
		<access-denied-handler error-page="/login/accessDenied"/>
	</http>

<!-- 	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>  -->
	
	<beans:bean id="customNoOpPasswordEncoder" class="edu.bit.ex.security.CustomNoOpPasswordEncoder"/>
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- provider --> 
	<authentication-manager>
		<authentication-provider> 
		<password-encoder ref="bcryptPasswordEncoder"/> <!-- customNoOpPasswordEncoder는 암호화된 비번 그대로 bcryptPasswordEncoder는 암호화된 비번 복호화해서 -->
 			<jdbc-user-service 
				data-source-ref="dataSource"
				role-prefix=""
				users-by-username-query="select username, password, enabled from users where username = ?"
				authorities-by-username-query="select username, authority from authorities where username = ?"
			/> 
			<!-- <jdbc-user-service 
               data-source-ref="dataSource"
               role-prefix=""
               users-by-username-query="select ename, empno, 1 from emp where ename = ?"
               authorities-by-username-query="select ename, case when job='MANAGER' then 'ROLE_ADMIN' else 'ROLE_USER' end from emp where ename = ?"
           /> -->  
           	<!-- authorities-by-username-query="select ename, authority from emp2 where ename = ?" -->
		</authentication-provider>
	</authentication-manager>


</beans:beans>