<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/security"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <http> 
	   <intercept-url pattern="/login/loginForm" access="permitAll" />
       <intercept-url pattern="/" access="permitAll" />
       <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
       <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
       
      <!-- <form-login /> 디폴트 로그인 페이지 -->
      <!-- login-page : 로그인 페이지 -->
      <!-- default-target-url : 로그인 성공시 기본적으로 호출할 url -->
      <!-- authentication-failure-url : 로그인 실패시 호출될 url -->
      <!-- form 으로 넘어오는 name 값과 username-parameter와 username-parameter의 값이 일치해야 함 -->
      <form-login login-page="/login/loginForm" 
      default-target-url="/"
      authentication-failure-url="/login/loginForm?error"
      username-parameter="id"  
      password-parameter="password" />
 
      <logout logout-url="/logout" logout-success-url="/" /> 

      <!-- 403 에러 처리 form-log 아래에 위치-->
      <!-- 내부적으로 403 에러를 감지하면 아래의 에러 페이지로 이동 -->
      <access-denied-handler error-page="/login/accessDenied"/>
   </http> 
   
   <beans:bean id="customNoOpPasswordEncoder" class="edu.bit.ex.security.CustomNoOpPasswordEncoder"/>
   
   <!-- provider --> 
   <authentication-manager>
	 <authentication-provider> 
	 	<!-- customNoOpPasswordEncoder는 암호화된 비번 그대로 bcryptPasswordEncoder는 암호화된 비번 복호화해서 -->
		<password-encoder ref="customNoOpPasswordEncoder"/> 
		
		<!-- jdbc-user-service : 자바 데이터베이스 커넥션 = db에서 유저를 가져오겠다 -->
		<!-- data-source-ref : 커넥션풀을 생각해야함 root-context.xml 의 그 datasource 맞음 커넥션 객체-->
		<!-- users-by-username-query : 무조건 3개 필요 username, password, enabled (인증 정보)-->
		<!-- authorities-by-username-query : 해당 유저 네임에 맞는 권한을 가져옴 (권한)-->
       <jdbc-user-service 
         data-source-ref="dataSource"
         users-by-username-query="select username, password, enabled from users where username = ?"
         authorities-by-username-query="select username, authority from authorities where username = ?"
      />
     </authentication-provider>   
   </authentication-manager>

</beans:beans>